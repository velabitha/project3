import 'package:flutter/material.dart';

void main() => runApp(TodoApp());

class TodoApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'TODO TASK',
      home: LoginPage(),
    );
  }
}

// ------------------ LOGIN PAGE ------------------

class LoginPage extends StatefulWidget {
  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController usernameController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  String error = "";

  void _login() {
    String username = usernameController.text;
    String password = passwordController.text;

    if (username == "admin" && password == "1234") {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (_) => TodoHomePage()),
      );
    } else {
      setState(() {
        error = "Invalid username or password";
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Login"),
        backgroundColor: Colors.indigo,
      ),
      body: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            TextField(
              controller: usernameController,
              decoration: InputDecoration(labelText: "Username"),
            ),
            TextField(
              controller: passwordController,
              obscureText: true,
              decoration: InputDecoration(labelText: "Password"),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _login,
              child: Text("Login"),
              style: ElevatedButton.styleFrom(backgroundColor: Colors.indigo),
            ),
            SizedBox(height: 10),
            Text(error, style: TextStyle(color: Colors.red)),
          ],
        ),
      ),
    );
  }
}

// ------------------ TODO HOME PAGE ------------------

class TodoHomePage extends StatefulWidget {
  @override
  _TodoHomePageState createState() => _TodoHomePageState();
}

class _TodoHomePageState extends State<TodoHomePage> {
  List<String> tasks = [];
  List<String> completedTasks = [];

  final TextEditingController taskController = TextEditingController();

  void _addTask(String task) {
    if (task.trim().isEmpty) return;
    setState(() {
      tasks.add(task.trim());
    });
  }

  void _completeTask(int index) {
    setState(() {
      completedTasks.add(tasks[index]);
      tasks.removeAt(index);
    });
  }

  void _showAddTaskDialog() {
    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: Text('Add Task'),
        content: TextField(
          controller: taskController,
          decoration: InputDecoration(hintText: "Enter task detail"),
        ),
        actions: [
          TextButton(
            onPressed: () {
              if (taskController.text.trim().isNotEmpty) {
                _addTask(taskController.text);
              }
              taskController.clear();
              Navigator.pop(context);
            },
            child: Text('Add'),
          ),
          TextButton(
            onPressed: () {
              taskController.clear();
              Navigator.pop(context);
            },
            child: Text('Cancel'),
          )
        ],
      ),
    );
  }

  void _navigateToCompleted() {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => CompletedPage(completedTasks: completedTasks),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final now = DateTime.now();
    return Scaffold(
      appBar: AppBar(
        title: Text('TODO TASK'),
        actions: [
          IconButton(
            icon: Icon(Icons.check),
            onPressed: _navigateToCompleted,
          )
        ],
        backgroundColor: Colors.indigo,
      ),
      body: Column(
        children: [
          Padding(
            padding: EdgeInsets.all(16),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text("${now.day}.${now.month}.${now.year}",
                    style: TextStyle(fontSize: 18)),
                Text("${now.hour}:${now.minute.toString().padLeft(2, '0')}",
                    style: TextStyle(fontSize: 18)),
              ],
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: tasks.length,
              itemBuilder: (_, index) => ListTile(
                title: Text(tasks[index]),
                trailing: IconButton(
                  icon: Icon(Icons.check_circle, color: Colors.green),
                  onPressed: () => _completeTask(index),
                ),
              ),
            ),
          )
        ],
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _showAddTaskDialog,
        child: Icon(Icons.add),
        backgroundColor: Colors.indigo,
      ),
    );
  }
}

// ------------------ COMPLETED TASK PAGE ------------------

class CompletedPage extends StatelessWidget {
  final List<String> completedTasks;

  CompletedPage({required this.completedTasks});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Completed Task'),
        backgroundColor: Colors.indigo,
      ),
      body: ListView.builder(
        itemCount: completedTasks.length,
        itemBuilder: (_, index) => ListTile(
          title: Text(completedTasks[index]),
        ),
      ),
    );
  }
}

